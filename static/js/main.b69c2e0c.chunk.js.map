{"version":3,"sources":["assets/mdb-react.png","components/custom/FirebaseSingleValue.js","components/custom/ListBox.js","components/pages/sections/AdminCardSection2.js","components/custom/Diagram.js","components/custom/MyPlot.js","components/custom/MyPlot2.js","components/custom/PowerFlow.js","assets/rightArrow.js","components/pages/sections/ChartSection1.js","components/pages/DashboardPage.js","components/pages/sections/ChartSection2.js","components/pages/sections/ModalSection.js","components/pages/sections/AdminCardSection2Usage.js","components/custom/MyPlotCost.js","components/custom/MyPlotUsage.js","components/pages/sections/ChartSection1Usage.js","components/pages/UsagePage.js","components/pages/AboutPage.js","components/pages/UtilityPage.js","components/pages/NotFoundPage.js","components/Routes.js","assets/burger.js","components/topNavigation.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","FirebaseSingleValue","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","defineProperty","collection","doc","field","_this2","db","firebase","firestore","get","then","document","setState","data","onSnapshot","snapshot","docChanges","forEach","change","type","react_default","a","createElement","DATA","Component","ListBox","React","Children","map","children","child","i","key","className","divStyle1","paddingTop","paddingBottom","paddingLeft","paddingRight","marginTop","lineHeight","divStyle2","divStyle3","divStyle4","marginBottom","AdminCardSection2","mdbreact","style","custom_ListBox","custom_FirebaseSingleValue","md","divStyle","height","textAlign","MyPlot","_this$state","Date","gotNewPlotData","bind","assertThisInitialized","AddToInitialData","x","y","newX","plotDataX","slice","newY","plotDataY","push","timestamp","undefined","toDate","length","_ref","_plotDataX","toArray","restX","_plotDataY","restY","concat","toConsumableArray","_ref2","AddEntry","add","Timestamp","fromDate","actual","Math","floor","random","docRef","console","log","id","catch","error","GetDate","orderBy","limit","querySnapshot","reverse","dataCollectionStartTime","plotWidth","ReactDOM","findDOMNode","offsetWidth","react_plotly_default","mode","marker","color","layout","width","title","titlefont","family","size","plot_bgcolor","paper_bgcolor","autosize","margin","l","r","b","t","pad","xaxis","tickfont","showgrid","zeroline","showline","mirror","gridcolor","gridwidth","zerolinecolor","zerolinewidth","linecolor","linewidth","showticklabels","yaxis","config","displayModeBar","responsive","MyPlot2","trace1","trace2","docData","newY1","newY2","prevState","name","showlegend","legend","font","bgcolor","bordercolor","borderwidth","textStyleGrid","position","top","left","fontSize","textStyleHouse","textStyleBattery","containerStyle","divStyleImg","PowerFlow","gifPath","gifVersion","src","SVG","_ref$style","_ref$fill","fill","_ref$width","_ref$className","_ref$viewBox","viewBox","xmlns","xmlnsXlink","d","barSwitchCss","zIndex","right","bottom","cursor","divStyleGraph","background","divStyleContainer1","divStyleContainer2","ChartSection1","showSecondGraph","onClick","rightArrow","custom_MyPlot","custom_MyPlot2","custom_PowerFlow","DashboardPage","Fragment","sections_ChartSection1","sections_AdminCardSection2","AdminCardSection2Usage","MyPlotUsage","trace3","newY3","barmode","values","labels","colors","MyPlotCost","custom_MyPlotUsage","UsagePage","ChartSection1Usage","sections_AdminCardSection2Usage","NotFoundPage","alt","hieght","logo","Routes","Switch","Route","path","exact","component","UtilityPage","AboutPage","_ref$height","fontStyle","fontWeight","TopNavigation","collapse","someText","react","sideOpen","burger","divStyleMain","justifyContent","maxWidth","maxHeight","marginLeft","marginRight","sidebarStyle","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","App","sidebarOpen","onSetSidebarOpen","open","topNavigation","components_Routes","react_sidebar_esm","sidebar","href","onSetOpen","styles","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","render","BrowserRouter","src_App","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b69c2e0c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mdb-react.d3e3273c.png\";","import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\n\r\nclass FirebaseSingleValue extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            collection: this.props.collection || \"realtime_data\",\r\n            doc: this.props.doc || \"singleValues\",\r\n            field: this.props.field || \"batteryPercent\",\r\n            [\"DATA\"]: \"...\"\r\n         }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const db = firebase.firestore();\r\n\r\n        db.collection(this.state.collection).doc(this.state.doc).get().then(document =>{\r\n            this.setState({\r\n                [\"DATA\"]: document.data()[this.state.field]\r\n            });\r\n        });\r\n\r\n        db.collection('realtime_data').onSnapshot(snapshot =>{\r\n            let changes = snapshot.docChanges();\r\n            \r\n            changes.forEach(change => {\r\n                if(change.type != 'modified') return;\r\n\r\n                this.setState({\r\n                    [\"DATA\"]: change.doc.data()[this.state.field]\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (            \r\n            <span>\r\n                {this.state.DATA}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FirebaseSingleValue;","import React, { Component } from 'react';\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from 'mdbreact';\r\n\r\nclass ListBox extends Component {  \r\n    render() {\r\n        return (\r\n            <div>\r\n            {React.Children.map(this.props.children, (child, i) => {\r\n              return <li key={i} className=\"list-group-item\">{child}</li>\r\n            })}\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ListBox;","import React from 'react';\nimport { MDBCard, MDBCardBody, MDBIcon, MDBRow, MDBCol } from 'mdbreact';\nimport FirebaseSingleValue from '../../custom/FirebaseSingleValue';\nimport ListBox from \"./../../custom/ListBox\";\n\nimport \"./CustomAddedCss.css\"\n\n  var divStyle1 = {\n    paddingTop: 0,\n    paddingBottom: 0,\n    paddingLeft: 3,\n    paddingRight: 3,\n    marginTop: 2,\n    lineHeight: 2.1,\n  };\n\nvar divStyle2 = {\n  paddingTop: 0,\n  paddingBottom: 0,\n  paddingLeft: 3,\n  paddingRight: 3,\n  marginTop: 2,\n  lineHeight: 2.1,\n};\n\nvar divStyle3 = {\n  paddingTop: 0,\n  paddingBottom: 0,\n  paddingLeft: 3,\n  paddingRight: 3,\n  lineHeight: 2.1,\n};\n\nvar divStyle4 = {\n  paddingBottom: 1,\n  marginBottom: 1,\n};\n\nconst AdminCardSection2 = () => {\n  return (\n    <MDBRow /* className=\"mb-2\" */ style={divStyle4}>\n        <MDBCol /* xl=\"3\"  md=\"8\"className=\"mb-2\" */ style={divStyle4}>\n          <div>\n            <div className=\"row\">\n              <div className=\"col-sm-6\" style={divStyle1}>\n              <ListBox>\n                <div><span>Total Predicted Usages for Today:</span></div>\n                <div >\n                  <span>On-Peak: </span>\n                  <span><FirebaseSingleValue field=\"predictedOnPeak\"></FirebaseSingleValue></span>\n                  <span> kWh</span></div>\n                <div>\n                  <span>Mid-Peak: </span>\n                  <span><FirebaseSingleValue field=\"predictedMidPeak\"></FirebaseSingleValue></span>\n                  <span> kWh</span></div>\n                {/* <div>\n                  <span>Off-Peak: </span>\n                  <span><FirebaseSingleValue field=\"predictedOffPeak\"></FirebaseSingleValue></span>\n                  <span> kWh</span>\n                </div> */}\n                {/* <FirebaseSingleValue collection=\"realtime_data\" doc=\"singleValues\" field=\"powerByGrid\"></FirebaseSingleValue> */}\n              </ListBox>\n              </div>\n              <div className=\"col-sm-6\" style={divStyle2}>\n              <ListBox>\n                <div><span>Battery Allocation for Today:</span></div>\n                <div>\n                  <span>On-Peak: </span>\n                  <span><FirebaseSingleValue field=\"batteryAllocOnPercent\"></FirebaseSingleValue></span>\n                  <span>% (</span>\n                  <span><FirebaseSingleValue field=\"batteryAllocOnPeak\"></FirebaseSingleValue></span>\n                  <span> kWh)</span>\n                </div>\n                <div>\n                  <span>Mid-Peak: </span>\n                  <span><FirebaseSingleValue field=\"batteryAllocMidPercent\"></FirebaseSingleValue></span>\n                  <span>% (</span>\n                  <span><FirebaseSingleValue field=\"batteryAllocMidPeak\"></FirebaseSingleValue></span>\n                  <span> kWh)</span>\n                </div>\n              </ListBox>\n              </div>\n            </div>\n          </div>\n\n          {/* <MDBCard color=\"primary-color\" className=\"classic-admin-card\">\n            <MDBCardBody>\n              <div className=\"float-right\">\n              <MDBIcon far icon=\"money-bill-alt\"/>\n              </div>\n              <p className=\"white-text\">SALES</p>\n              <h4><strong>$2000</strong></h4>\n            </MDBCardBody>\n            <div className=\"progress\">\n              <div aria-valuemax=\"100\" aria-valuemin=\"0\" aria-valuenow=\"25\" className=\"progress-bar bg grey darken-3\" role=\"progressbar\" style={{width: \"25%\"}}></div>\n            </div>\n            <MDBCardBody>\n              <p>Better than last week (25%)</p>\n            </MDBCardBody>\n          </MDBCard> */}\n          </MDBCol>\n        <MDBCol /* xl=\"3\" */ md=\"4\" /* className=\"mb-2\" */ style={divStyle3}>\n          <ListBox>\n            <div>\n              <span>Real-Time Power Usage: </span>\n              <span><FirebaseSingleValue field=\"rPowerUsage\"></FirebaseSingleValue></span>\n              <span> kW</span>\n            </div>\n            <div>\n              <span>Battery: </span>\n              <span><FirebaseSingleValue field=\"batteryPercent\"></FirebaseSingleValue></span>\n              <span>%</span>\n            </div>\n            <div>\n              <span>Power Used Yesterday: </span>\n              <span><FirebaseSingleValue field=\"lastDayPower\"></FirebaseSingleValue></span>\n              <span> kWh</span>\n            </div>\n          </ListBox>\n          {/* <MDBCard color=\"warning-color\" className=\"classic-admin-card\">\n            <MDBCardBody>\n              <div className=\"float-right\">\n              <MDBIcon icon=\"chart-line\"/>\n              </div>\n              <p className=\"white-text\">SUBSCRIPTIONS</p>\n              <h4><strong>200</strong></h4>\n            </MDBCardBody>\n            <div className=\"progress\">\n              <div aria-valuemax=\"100\" aria-valuemin=\"0\" aria-valuenow=\"25\" className=\"progress-bar bg grey darken-3\" role=\"progressbar\" style={{width: \"25%\"}}></div>\n            </div>\n            <MDBCardBody>\n              <p>Worse than last week (25%)</p>\n            </MDBCardBody>\n          </MDBCard> */}\n        </MDBCol>\n      </MDBRow>\n  )\n}\n\nexport default AdminCardSection2;\n\n","import React, { Component } from 'react';\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavbarToggler, MDBCollapse, MDBNavItem, MDBNavLink, MDBIcon } from 'mdbreact';\r\n\r\nvar divStyle = {\r\n    height: 340,\r\n    textAlign: 'center',\r\n  };\r\n\r\nclass Diagram extends Component {\r\n    componentDidMount(){\r\n        // divStyle['height'] = this.props.height;\r\n    }\r\n\r\n    render() {\r\n        return (            \r\n            <div style={divStyle}>\r\n                \r\n                <ul className=\"list-group\">                \r\n{/*                     <li className=\"list-group-item\">{this.props.height}</li>\r\n */}                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Diagram;","import React, { Component } from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport ReactDOM from \"react-dom\";\r\nimport firebase from 'firebase';\r\n\r\nconst NUM_DATA_POINTS = 300;\r\n\r\nclass MyPlot extends Component {\r\n    constructor (props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            collection: this.props.collection || \"plotData\",\r\n            doc: this.props.doc || \"singleValues\",\r\n            field: this.props.field || \"batteryPercent\",\r\n            [\"DATA\"]: \"loading...\",\r\n            plotWidth: '526',\r\n            plotDataX: [],\r\n            plotDataY: [],\r\n            dataCollectionStartTime: new Date()\r\n         }\r\n\r\n         this.gotNewPlotData = this.gotNewPlotData.bind(this);\r\n         this.AddToInitialData = this.AddToInitialData.bind(this);\r\n    }\r\n    \r\n    AddToInitialData(x, y){\r\n        var newX = this.state.plotDataX.slice();\r\n        var newY = this.state.plotDataY.slice();\r\n\r\n        newX.push(x);\r\n        newY.push(y);\r\n\r\n        this.setState(() => ({\r\n            plotDataX: newX,\r\n            plotDataY: newY\r\n        }));\r\n    }\r\n\r\n    gotNewPlotData(timestamp, y){\r\n        if (timestamp  === undefined || y  === undefined) return;\r\n        \r\n        const x = timestamp.toDate();\r\n\r\n        const { plotDataX} = this.state;\r\n\r\n       if(plotDataX.length === NUM_DATA_POINTS)  this.setState(({plotDataX, plotDataY})=>{\r\n          const [ firstX, ...restX ] = plotDataX;\r\n          const [ firstY, ...restY ] = plotDataY;\r\n          return {\r\n            plotDataX: [...restX, x],\r\n            plotDataY: [...restY, y],\r\n            };}\r\n        );\r\n\r\n       else this.setState(({plotDataX, plotDataY})=>({\r\n            plotDataX: [...plotDataX, x],\r\n            plotDataY: [...plotDataY, y],\r\n            }\r\n        ));\r\n    };\r\n    \r\n    debugMethod(){\r\n         /* const x = Math.floor(Math.random()*10);\r\n         const y = Math.floor(Math.random()*10);\r\n         console.log(x,y);\r\n         this.gotNewPlotDataTest(x,y); */\r\n        this.AddEntry();\r\n    }\r\n\r\n    AddEntry(){\r\n        const db = firebase.firestore();\r\n\r\n        db.collection(this.state.collection).add({\r\n            timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\r\n            actual: Math.floor(Math.random()*10)\r\n        })\r\n        .then(function(docRef) {\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n        })\r\n        .catch(function(error) {\r\n            console.error(\"Error adding document: \", error);\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        const db = firebase.firestore();\r\n        const gotNewPlotData = this.gotNewPlotData;\r\n        const AddToInitialData = this.AddToInitialData;\r\n        const GetDate = this.GetDate;\r\n\r\n        db.collection(this.state.collection).orderBy(\"timestamp\", \"desc\").limit(NUM_DATA_POINTS).get().then(function(querySnapshot) {\r\n            let newX = [];\r\n            let newY = [];\r\n            querySnapshot.forEach(function(doc) {\r\n                if (doc.data().timestamp  === undefined || doc.data().actual  === undefined) return;\r\n                var x = doc.data().timestamp.toDate();\r\n                var y = doc.data().actual;\r\n                newX.push(x);\r\n                newY.push(y);\r\n            });\r\n\r\n            newX.reverse();\r\n            newY.reverse();\r\n\r\n            for(let i = 0; i < newX.length; i++){\r\n                AddToInitialData(newX[i],newY[i]);\r\n            }\r\n        }).then(() =>{\r\n            this.setState(() => ({\r\n                dataCollectionStartTime: this.state.plotDataX[this.state.plotDataX.length-1]\r\n            }));\r\n        }).then(() =>{\r\n            db.collection(this.state.collection).onSnapshot(snapshot =>{\r\n                let changes = snapshot.docChanges();\r\n            \r\n                changes.forEach(change => {\r\n                    if (change.doc.data().timestamp !== undefined && change.doc.data().timestamp.toDate() > this.state.dataCollectionStartTime){\r\n                    console.log(\"new data event\", change, change.doc.data());\r\n                    gotNewPlotData(change.doc.data().timestamp, change.doc.data().actual);\r\n                    }\r\n                    \r\n                });\r\n            });\r\n\r\n            this.setState(() => ({\r\n                plotWidth: ReactDOM.findDOMNode(this).offsetWidth,\r\n            }));\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Plot\r\n                    data={[\r\n                        {\r\n                            \r\n                            x: this.state.plotDataX,\r\n                            y: this.state.plotDataY,\r\n                            type: 'scatter',\r\n                            mode: 'lines+points',\r\n                            marker: {color: '#A11B1B'},\r\n                        }]}\r\n                    layout={ \r\n                        {\r\n                        width:this.state.plotWidth,\r\n                        height:315,\r\n                        title: 'Real-Time Power',\r\n                        titlefont: {\r\n                            family: 'Roboto, sans-serif',\r\n                            size: 14,\r\n                            color: 'BCBCBC'\r\n                        },\r\n                        plot_bgcolor: '#141414',\r\n                        paper_bgcolor: '#141414',\r\n                        autosize: false,\r\n                        margin: {\r\n                            l: 48,\r\n                            r: 20,\r\n                            b: 24,\r\n                            t: 30,\r\n                            pad: 4\r\n                            },\r\n\r\n                            xaxis: {\r\n                                tickfont: {\r\n                                    family: 'Roboto, sans-serif',\r\n                                    size: 12,\r\n                                    color: 'BCBCBC'\r\n                                },\r\n                                showgrid: true,\r\n                                zeroline: true,\r\n                                showline: true,\r\n                                mirror: 'ticks',\r\n                                gridcolor: '#242424',\r\n                                gridwidth: 1,\r\n                                zerolinecolor: '#242424',\r\n                                zerolinewidth: 1,\r\n                                linecolor: '#242424',\r\n                                linewidth: 1,\r\n                                showticklabels: false,\r\n                              },\r\n                              yaxis: {\r\n                                title: 'Power Usage (kW)',\r\n                                titlefont: {\r\n                                    family: 'Roboto, sans-serif',\r\n                                    size: 12,\r\n                                    color: 'BCBCBC'\r\n                                },\r\n                                tickfont: {\r\n                                    family: 'Roboto, sans-serif',\r\n                                    size: 11,\r\n                                    color: 'BCBCBC'\r\n                                },\r\n                                showgrid: true,\r\n                                zeroline: true,\r\n                                showline: true,\r\n                                mirror: 'ticks',\r\n                                gridcolor: '#242424',\r\n                                gridwidth: 1,\r\n                                zerolinecolor: '#242424',\r\n                                zerolinewidth: 1,\r\n                                linecolor: '#242424',\r\n                                linewidth: 1\r\n                              }\r\n                        } }\r\n                    config={ {displayModeBar: false, responsive:true} }\r\n                />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPlot;","import React, { Component } from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport ReactDOM from \"react-dom\";\r\nimport firebase from 'firebase';\r\n\r\nclass MyPlot2 extends Component {\r\n    constructor (props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            collection: this.props.collection || \"realtime_data\",\r\n            doc: this.props.doc || \"singleValues\",\r\n            plotWidth: '11',\r\n            trace1: {\r\n                x: ['7AM', '8AM', '9AM', '10AM', '11AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM'],\r\n                y: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\r\n                type: 'bar'\r\n            },\r\n            trace2: {\r\n                x: ['7AM', '8AM', '9AM', '10AM', '11AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM'],\r\n                y: [2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3],\r\n                type: 'bar'\r\n            },\r\n         }\r\n\r\n         this.gotNewPlotData = this.gotNewPlotData.bind(this);\r\n         this.AddToInitialData = this.AddToInitialData.bind(this);\r\n    }\r\n    \r\n    AddToInitialData(x, y){\r\n        var newX = this.state.plotDataX.slice();\r\n        var newY = this.state.plotDataY.slice();\r\n\r\n        newX.push(x);\r\n        newY.push(y);\r\n\r\n        this.setState(() => ({\r\n            plotDataX: newX,\r\n            plotDataY: newY\r\n        }));\r\n    }\r\n\r\n    AddEntry(){\r\n        const db = firebase.firestore();\r\n\r\n        db.collection(this.state.collection).add({\r\n            timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\r\n            actual: Math.floor(Math.random()*10)\r\n        })\r\n        .then(function(docRef) {\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n        })\r\n        .catch(function(error) {\r\n            console.error(\"Error adding document: \", error);\r\n        });\r\n    }\r\n\r\n    gotNewPlotData(docData){\r\n        var newY1 = [\r\n            docData['predicted_hour7'],\r\n            docData['predicted_hour8'],\r\n            docData['predicted_hour9'],\r\n            docData['predicted_hour10'],\r\n            docData['predicted_hour11'],\r\n            docData['predicted_hour12'],\r\n            docData['predicted_hour13'],\r\n            docData['predicted_hour14'],\r\n            docData['predicted_hour15'],\r\n            docData['predicted_hour16'],\r\n            docData['predicted_hour17'],\r\n            docData['predicted_hour18'],\r\n\r\n        ];\r\n\r\n        var newY2 = [\r\n            docData['hour7'],\r\n            docData['hour8'],\r\n            docData['hour9'],\r\n            docData['hour10'],\r\n            docData['hour11'],\r\n            docData['hour12'],\r\n            docData['hour13'],\r\n            docData['hour14'],\r\n            docData['hour15'],\r\n            docData['hour16'],\r\n            docData['hour17'],\r\n            docData['hour18'],\r\n        ];\r\n\r\n        this.setState((prevState, props) => ({\r\n            trace1:  {\r\n                x: prevState.trace1.x,\r\n                y: newY1,\r\n                type: prevState.trace1.type,\r\n                name: 'Predicted',\r\n            },\r\n            trace2: {\r\n                x: prevState.trace2.x,\r\n                y: newY2,\r\n                type: prevState.trace2.type,\r\n                name: 'Actual',\r\n            }\r\n        }));\r\n    }\r\n\r\n    componentDidMount(){\r\n        const db = firebase.firestore();\r\n        const gotNewPlotData = this.gotNewPlotData;\r\n\r\n        db.collection(this.state.collection).doc(this.state.doc).get().then(document =>{\r\n            gotNewPlotData(document.data());\r\n        });\r\n\r\n        db.collection('realtime_data').onSnapshot(snapshot =>{\r\n            let changes = snapshot.docChanges();\r\n            \r\n            changes.forEach(change => {\r\n                if(change.type != 'modified') return;\r\n                gotNewPlotData(change.doc.data());\r\n            });\r\n        });\r\n\r\n        this.setState(() => ({\r\n            plotWidth: ReactDOM.findDOMNode(this).offsetWidth - 235,\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Plot\r\n                    data={[this.state.trace1, this.state.trace2]}\r\n                    layout={ \r\n                        {\r\n                        width:526,\r\n                        height:315,\r\n                        title: 'Predicted vs Actual Power Usage',\r\n                        titlefont: {\r\n                            family: 'Roboto, sans-serif',\r\n                            size: 14,\r\n                            color: 'BCBCBC'\r\n                        },\r\n                        showlegend: true,\r\n                            legend: {\r\n                            x: 0,\r\n                            y: 1,\r\n                            font: {\r\n                              family: 'Roboto, sans-serif',\r\n                              size: 9,\r\n                              color: '#BCBCBC'\r\n                            },\r\n                            bgcolor: 'rgba(0,0,0,0)',\r\n                            bordercolor: 'rgba(0,0,0,0)',\r\n                            borderwidth: 0\r\n                            },\r\n                        plot_bgcolor: '#141414',\r\n                        paper_bgcolor: '#141414',\r\n                        autosize: false,\r\n                        margin: {\r\n                            l: 48,\r\n                            r: 20,\r\n                            b: 24,\r\n                            t: 30,\r\n                            pad: 4\r\n                            },\r\n\r\n                            xaxis: {\r\n                                tickfont: {\r\n                                    family: 'Roboto, sans-serif',\r\n                                    size: 8.5,\r\n                                    color: 'BCBCBC'\r\n                                },\r\n                                \r\n                               /*  showgrid: true,\r\n                                zeroline: true,\r\n                                showline: true,\r\n                                mirror: 'ticks',\r\n                                gridcolor: '#242424',\r\n                                gridwidth: 1,\r\n                                zerolinecolor: '#242424',\r\n                                zerolinewidth: 1,\r\n                                linecolor: '#242424',\r\n                                linewidth: 1,\r\n                                showticklabels: false, */\r\n                              },\r\n                              yaxis: {\r\n                                title: 'Power Usage (kW)',\r\n                                titlefont: {\r\n                                    family: 'Roboto, sans-serif',\r\n                                    size: 12,\r\n                                    color: 'BCBCBC'\r\n                                },\r\n                                tickfont: {\r\n                                    family: 'Roboto, sans-serif',\r\n                                    size: 11,\r\n                                    color: 'BCBCBC'\r\n                                },\r\n                                showgrid: true,\r\n                                zeroline: true,\r\n                                showline: true,\r\n                                mirror: 'ticks',\r\n                                gridcolor: '#242424',\r\n                                gridwidth: 1,\r\n                                zerolinecolor: '#242424',\r\n                                zerolinewidth: 1,\r\n                                linecolor: '#242424',\r\n                                linewidth: 1\r\n                              }\r\n                        } }\r\n                    config={ {displayModeBar: false, responsive:true} }\r\n                />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPlot2;","import React, { Component } from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport ReactDOM from \"react-dom\";\r\nimport firebase from 'firebase';\r\nimport FirebaseSingleValue from '../custom/FirebaseSingleValue';\r\n\r\n\r\nconst textStyleGrid =  {\r\n    position: 'absolute',\r\n    color: '#BCBCBC',\r\n    top: 160,\r\n    left: 28,\r\n    fontSize: 15,\r\n    textAlign: 'center'\r\n}\r\nconst textStyleHouse =  {\r\n    position: 'absolute',\r\n    color: '#BCBCBC',\r\n    top: 160,\r\n    left: 188,\r\n    textAlign: 'center'\r\n}\r\nconst textStyleBattery =  {\r\n    position: 'absolute',\r\n    color: '#BCBCBC',\r\n    top: 277,\r\n    left: 115,\r\n    textAlign: 'center'\r\n}\r\n\r\nconst containerStyle = {\r\n    position: 'relative',\r\n    color: 'white',\r\n    textAlign: 'center'\r\n}\r\n\r\nvar divStyleImg = {\r\n    width: '100%',\r\n    height: 323,\r\n}\r\n\r\nconst testing =  {\r\n    position: 'absolute',\r\n    color: '#BCBCBC',\r\n    top: 305,\r\n    left: 70,\r\n    fontSize: 13.5\r\n}\r\n\r\nclass PowerFlow extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            collection: 'realtime_data',\r\n            gifPath: 'https://i.imgur.com/6tim8F4.png'\r\n         }\r\n    }\r\n\r\n    componentDidMount(){\r\n        const db = firebase.firestore();\r\n\r\n        //Temp commented out:\r\n        db.collection(this.state.collection).onSnapshot(snapshot =>{\r\n             let changes = snapshot.docChanges();\r\n            \r\n             changes.forEach(change => {\r\n                 if (change.doc.data().gifVersion !== this.state.gifPath){\r\n                    // console.log(\"new GIF\", change.doc.data());\r\n                    this.setState(() => ({gifPath: change.doc.data().gifVersion}));\r\n                 }\r\n             });\r\n         });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Bunty\" style={containerStyle}>\r\n                <div style={containerStyle}>\r\n                    <div style={textStyleGrid}><span><FirebaseSingleValue field=\"grid1\"></FirebaseSingleValue></span> \r\n                    <span style={{fontSize: 13.5}}> kW</span>\r\n                    </div>\r\n                    <div style={textStyleHouse}><span><FirebaseSingleValue field=\"home1\"></FirebaseSingleValue></span> \r\n                    <span style={{fontSize: 13.5}}> kW</span>\r\n                    </div>\r\n                    <div style={textStyleBattery}><span><FirebaseSingleValue field=\"battery1\"></FirebaseSingleValue></span> \r\n                    <span style={{fontSize: 13.5}}> kW</span>\r\n                    </div>\r\n\r\n                    <div><img style={divStyleImg} src={this.state.gifPath}></img></div>\r\n                   \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PowerFlow;","import React from \"react\";\r\n\r\nconst SVG = ({\r\n  style = {},\r\n  fill = \"#000\",\r\n  width = \"28\",\r\n  className = \"\",\r\n  viewBox = \"0 0 40 40\"\r\n}) => (\r\n  <svg\r\n    width={width}\r\n    style={style}\r\n    height={width}\r\n    viewBox={viewBox}\r\n    fill={fill}\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className={`svg-icon ${className || \"\"}`}\r\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n  >\r\n    <path d=\"M17.9169 10.75L15.3906 13.2762L23.5965 21.5L15.3906 29.7237L17.9169 32.25L28.6669 21.5L17.9169 10.75Z\" fill=\"#565656\"/>\r\n  </svg>\r\n);\r\n\r\nexport default SVG;\r\n","import React, { Component } from 'react';\nimport { MDBCol, MDBCard, MDBCardBody, MDBCardHeader, MDBRow, MDBListGroup, MDBListGroupItem, MDBBadge, MDBIcon } from 'mdbreact';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport Diagram from '../../custom/Diagram';\nimport MyPlot from '../../custom/MyPlot';\nimport MyPlot2 from '../../custom/MyPlot2';\nimport PowerFlow from '../../custom/PowerFlow';\n\nimport RightArrow  from '../../../assets/rightArrow';\n\nvar barSwitchCss = {\n    zIndex: 5,\n    position: 'absolute',\n    right: -1,\n    /* top: -6, */\n    bottom: -1,\n    cursor: 'pointer'\n}\n\nvar divStyleGraph = {\n    background: \"#141414\",\n}\n\nvar divStyleContainer1 = {\n    paddingTop: 0,\n    paddingBottom: 0,\n    paddingLeft: 5,\n    paddingRight: 3,\n    marginBottom: 4,\n}\nvar divStyleContainer2 = {\n    paddingTop: 0,\n    paddingBottom: 0,\n    paddingLeft: 3,\n    paddingRight: 5,\n    margin: 0,\n}\n\nclass ChartSection1 extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {showSecondGraph: false};\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(){\n        this.setState((prevState) => ({\n            showSecondGraph: !prevState.showSecondGraph,\n        }));\n        console.log(this.state.showSecondGraph);\n    }\n\n    render(){\n        return (\n            <MDBRow /* className=\"mb-2\" */>\n                <MDBCol md=\"8\"/* className=\"mb-2\" */ style={divStyleContainer1}>\n                    <MDBCard className=\"mb-1\">\n                        <div onClick={this.onClick} style={barSwitchCss}>\n                            <RightArrow></RightArrow>\n                        </div>\n                        {/* <button onClick={this.onClick} style={barSwitchCss}>Clack</button> */}\n                        <div style={divStyleGraph}>\n                            <div className={this.state.showSecondGraph? 'hidden' : ''}>\n                                <MyPlot/>\n                            </div>\n                            <div className={this.state.showSecondGraph? '' : 'hidden'}>\n                                <MyPlot2/>\n                            </div>\n                        </div>\n                    </MDBCard>\n                </MDBCol>\n                <MDBCol md=\"4\" /* className=\"mb-2\" */ style={divStyleContainer2}>\n                    <MDBCard className=\"mb-1\" >\n                        <PowerFlow></PowerFlow>\n                        {/* <div>\n                            <img style={divStyleImg} src=\"https://i.imgur.com/4tWawE8.png\"></img>\n                        </div> */}\n                        {/* <MDBCardHeader>Pie chart</MDBCardHeader> */}\n                        {/* <MDBCardBody>\n                            <Pie data={dataPie} height={370} options={{responsive: true}} />\n                        </MDBCardBody> */}\n                    </MDBCard>\n                </MDBCol>\n            </MDBRow>\n        )\n    }\n}\n\nexport default ChartSection1;\n\n","import React from 'react';\nimport { MDBRow } from 'mdbreact';\nimport AdminCardSection1 from './sections/AdminCardSection1';\nimport AdminCardSection2 from './sections/AdminCardSection2';\nimport TableSection from './sections/TableSection';\nimport BreadcrumSection from './sections/BreadcrumSection';\nimport ChartSection1 from './sections/ChartSection1';\nimport ChartSection2 from './sections/ChartSection2';\nimport MapSection from './sections/MapSection';\nimport ModalSection from './sections/ModalSection';\n\nconst DashboardPage =  () => {\n  return (\n    <React.Fragment>\n      {/* <BreadcrumSection /> */}\n      <ChartSection1 />\n      <AdminCardSection2 />\n      {/* <TableSection /> */}\n      {/* <ChartSection2 /> */}\n      {/* <MDBRow className=\"mb-4\">\n          <MapSection />\n          <ModalSection />\n      </MDBRow> */}\n      {/* <AdminCardSection2 /> */}\n    </React.Fragment>\n  )\n}\n\nexport default DashboardPage;","import React, { Component } from 'react';\nimport { MDBCol, MDBCard, MDBCardBody, MDBCardHeader, MDBRow } from 'mdbreact';\nimport { Line, Doughnut, Radar } from 'react-chartjs-2';\n\nclass ChartSection2 extends Component {\n    render(){\n        const dataLine = {\n            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n            datasets: [\n              {\n                label: 'My First dataset',\n                fill: false,\n                lineTension: 0.1,\n                backgroundColor: 'rgba(75,192,192,0.4)',\n                borderColor: 'rgba(75,192,192,0)',\n                borderCapStyle: 'butt',\n                borderDash: [],\n                borderDashOffset: 0.0,\n                borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(75,192,192,1)',\n                pointBackgroundColor: '#fff',\n                pointBorderWidth: 1,\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n                data: [65, 59, 80, 81, 56, 55, 40]\n              }\n            ]\n        };\n\n        const dataRadar = {\n            labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n            datasets: [\n                {\n                  label: '#1',\n                  backgroundColor: 'rgba(245, 74, 85, 0.5)',\n                  data: [65, 59, 80, 81, 56, 55, 40]\n                },\n                {\n                  label: '#2',\n                  backgroundColor: 'rgba(90, 173, 246, 0.5)',\n                  data: [12, 42, 121, 56, 24, 12, 2]\n                },\n                {\n                  label: '#3',\n                  backgroundColor: 'rgba(245, 192, 50, 0.5)',\n                  data: [2, 123, 154, 76, 54, 23, 5]\n                }\n              ]\n        };\n\n        const dataDoughnut = {\n            labels: [\"Red\", \"Green\", \"Yellow\", \"Grey\", \"Dark Grey\"],\n            datasets: [{\n                data: [300, 50, 100, 40, 120],\n                backgroundColor: [\"#F7464A\", \"#46BFBD\", \"#FDB45C\", \"#949FB1\", \"#4D5360\"],\n                hoverBackgroundColor: [\"#FF5A5E\", \"#5AD3D1\", \"#FFC870\", \"#A8B3C5\", \"#616774\"]\n            }]\n        };\n\n        return (\n            <MDBRow className=\"mb-4\">\n                <MDBCol md=\"12\" lg=\"4\" className=\"mb-4\">\n                    <MDBCard className=\"mb-4\">\n                    <MDBCardHeader>Line chart</MDBCardHeader>\n                    <MDBCardBody>\n                        <Line data={dataLine} options={{responsive: true }} />\n                    </MDBCardBody>\n                    </MDBCard>\n                </MDBCol>\n                <MDBCol md=\"12\" lg=\"4\" className=\"mb-4\">\n                    <MDBCard className=\"mb-4\">\n                    <MDBCardHeader>Radar chart</MDBCardHeader>\n                    <MDBCardBody>\n                        <Radar data={dataRadar}  height={300} options={{responsive: true }} />\n                    </MDBCardBody>\n                    </MDBCard>\n                </MDBCol>\n                <MDBCol md=\"12\" lg=\"4\" className=\"mb-4\">\n                    <MDBCard className=\"mb-4\">\n                    <MDBCardHeader>Doughnut chart</MDBCardHeader>\n                    <MDBCardBody >\n                        <Doughnut data={dataDoughnut}  height={300} options={{responsive: true }} />\n                    </MDBCardBody>\n                    </MDBCard>\n                </MDBCol>\n            </MDBRow>\n        )\n    }\n\n}\n\nexport default ChartSection2;\n\n","import React, { Component } from 'react';\nimport { MDBCol, MDBRow, MDBCard, MDBCardBody, MDBCardHeader, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader} from 'mdbreact';\n\nclass ModalSection extends Component {\n    state = {\n        modal1: false,\n        modal2: false,\n        modal3: false,\n        modal4: false,\n        modal5: false,\n        modal6: false,\n        modal7: false,\n        modal8: false,\n        modal9: false,\n        modal10: false,\n        modal11: false,\n        modal12: false,\n        modal13: false\n    }\n\n    toggle = nr =>  () => {\n        let modalName = 'modal' + nr;\n        this.setState({\n            [modalName]: !this.state[modalName]\n        })\n    }\n\n    render(){\n        return (\n            <MDBCol lg=\"6\" className=\"mb-4\">\n              <MDBCard>\n                <MDBCardHeader>Modals</MDBCardHeader>\n                <MDBCardBody>\n                  <h4 className=\"mb-5 mt-4 dark-grey-text text-center font-bold\"><strong>Position & Sizes</strong></h4>\n                  <div className=\"text-center mb-5\">\n                      <p className=\"lead\">Click buttons below to launch modals demo</p>\n                  </div>\n                  <MDBRow>\n                      <MDBCol md=\"3\" className=\"mb-3\">\n                          <h5 className=\"text-center mb-3\">Frame modal</h5>\n                          <img className=\"img-fluid z-depth-1\" src=\"https://mdbootstrap.com/img/brandflow/modal4.jpg\" alt=\"frame position\"/>\n                          <div className=\"text-center\">\n                              <h5 className=\"my-3\">Position</h5>\n                              <MDBBtn color=\"primary\" size=\"sm\" onClick={this.toggle(1)}>Top</MDBBtn>\n                              <MDBBtn color=\"primary\" size=\"sm\" onClick={this.toggle(2)}>Bottom</MDBBtn>\n                              <MDBModal toggle={this.toggle(1)} isOpen={this.state.modal1} position=\"top\" frame>\n                                  <MDBModalBody className=\"text-center\">\n                                  <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Impedit nisi quo provident fugiat reprehenderit nostrum quos...</span>\n                                  <MDBBtn color=\"secondary\" onClick={this.toggle(1)}>Close</MDBBtn>\n                                  <MDBBtn color=\"primary\" onClick={this.toggle(1)}>Save changes</MDBBtn>\n                                  </MDBModalBody>\n                              </MDBModal>\n                              <MDBModal toggle={this.toggle(2)} isOpen={this.state.modal2} position=\"bottom\" frame>\n                                  <MDBModalBody className=\"text-center\">\n                                  <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Impedit nisi quo provident fugiat reprehenderit nostrum quos...</span>\n                                  <MDBBtn color=\"secondary\" onClick={this.toggle(2)}>Close</MDBBtn>\n                                  <MDBBtn color=\"primary\" onClick={this.toggle(2)}>Save changes</MDBBtn>\n                                  </MDBModalBody>\n                              </MDBModal>\n                          </div>\n                      </MDBCol>\n                      <MDBCol md=\"3\" className=\"mb-3\">\n                          <h5 className=\"text-center mb-3\">Side modal</h5>\n                          <img className=\"img-fluid z-depth-1\" src=\"https://mdbootstrap.com/img/brandflow/modal3.jpg\" alt=\"frame position\"/>\n                          <div className=\"text-center\">\n                              <h5 className=\"my-3\">Position</h5>\n                              <MDBBtn color=\"primary\" size=\"sm\" onClick={this.toggle(3)}>Top Right</MDBBtn>\n                              <MDBBtn color=\"primary\" size=\"sm\" onClick={this.toggle(4)}>Top Left</MDBBtn>\n                              <MDBBtn color=\"primary\" size=\"sm\" onClick={this.toggle(5)}>Bottom Right</MDBBtn>\n                              <MDBBtn color=\"primary\" size=\"sm\" onClick={this.toggle(6)}>Bottom Left</MDBBtn>\n                              <MDBModal toggle={this.toggle(3)} isOpen={this.state.modal3} side position=\"top-right\">\n                                <MDBModalHeader>Modal Title</MDBModalHeader>\n                                <MDBModalBody className=\"text-center\">\n                                <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Impedit nisi quo provident fugiat reprehenderit nostrum quos...</span>\n                                <MDBBtn color=\"secondary\" onClick={this.toggle(3)}>Close</MDBBtn>\n                                </MDBModalBody>\n                              </MDBModal>\n                              <MDBModal toggle={this.toggle(4)} isOpen={this.state.modal4} side position=\"top-left\">\n                                <MDBModalHeader>Modal Title</MDBModalHeader>\n                                <MDBModalBody className=\"text-center\">\n                                <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Impedit nisi quo provident fugiat reprehenderit nostrum quos...</span>\n                                <MDBBtn color=\"secondary\" onClick={this.toggle(4)}>Close</MDBBtn>\n                                </MDBModalBody>\n                              </MDBModal>\n                              <MDBModal toggle={this.toggle(5)} isOpen={this.state.modal5} side position=\"bottom-right\">\n                                <MDBModalHeader>Modal Title</MDBModalHeader>\n                                <MDBModalBody className=\"text-center\">\n                                <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Impedit nisi quo provident fugiat reprehenderit nostrum quos...</span>\n                                <MDBBtn color=\"secondary\" onClick={this.toggle(5)}>Close</MDBBtn>\n                                </MDBModalBody>\n                              </MDBModal>\n                              <MDBModal toggle={this.toggle(6)} isOpen={this.state.modal6} side position=\"bottom-left\">\n                                <MDBModalHeader>Modal Title</MDBModalHeader>\n                                <MDBModalBody className=\"text-center\">\n                                <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Impedit nisi quo provident fugiat reprehenderit nostrum quos...</span>\n                                <MDBBtn color=\"secondary\" onClick={this.toggle(6)}>Close</MDBBtn>\n                                </MDBModalBody>\n                              </MDBModal>\n                          </div>\n                      </MDBCol>\n                      <MDBCol md=\"3\" className=\"mb-3\">\n                          <h5 className=\"text-center mb-3\">Central modal</h5>\n                          <img className=\"img-fluid z-depth-1\" src=\"https://mdbootstrap.com/img/brandflow/modal2.jpg\" alt=\"frame position\"/>\n                          <div className=\"text-center\">\n                              <h5 className=\"my-3\">Size</h5>\n                              <MDBBtn color=\"primary\" size=\"sm\" onClick={this.toggle(7)}>Small</MDBBtn>\n                              <MDBBtn color=\"primary\" size=\"sm\" onClick={this.toggle(8)}>Medium</MDBBtn>\n                              <MDBBtn color=\"primary\" size=\"sm\" onClick={this.toggle(9)}>Large</MDBBtn>\n                              <MDBBtn color=\"primary\" size=\"sm\" onClick={this.toggle(10)}>Fluid</MDBBtn>\n                              <MDBModal toggle={this.toggle(7)} isOpen={this.state.modal7} size=\"sm\">\n                                <MDBModalHeader>Modal Title</MDBModalHeader>\n                                <MDBModalBody className=\"text-center\">\n                                <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Impedit nisi quo provident fugiat reprehenderit nostrum quos...</span>\n                                <MDBBtn color=\"secondary\" onClick={this.toggle(7)}>Close</MDBBtn>\n                                </MDBModalBody>\n                              </MDBModal>\n                              <MDBModal toggle={this.toggle(8)} isOpen={this.state.modal8} >\n                                <MDBModalHeader>Modal Title</MDBModalHeader>\n                                <MDBModalBody className=\"text-center\">\n                                <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Impedit nisi quo provident fugiat reprehenderit nostrum quos...</span>\n                                <MDBBtn color=\"secondary\" onClick={this.toggle(8)}>Close</MDBBtn>\n                                </MDBModalBody>\n                              </MDBModal>\n                              <MDBModal toggle={this.toggle(9)} isOpen={this.state.modal9} size=\"lg\">\n                                <MDBModalHeader>Modal Title</MDBModalHeader>\n                                <MDBModalBody className=\"text-center\">\n                                <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Impedit nisi quo provident fugiat reprehenderit nostrum quos...</span>\n                                <MDBBtn color=\"secondary\" onClick={this.toggle(9)}>Close</MDBBtn>\n                                </MDBModalBody>\n                              </MDBModal>\n                              <MDBModal toggle={this.toggle(10)} isOpen={this.state.modal10} size=\"fluid\">\n                                <MDBModalHeader>Modal Title</MDBModalHeader>\n                                <MDBModalBody className=\"text-center\">\n                                <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Impedit nisi quo provident fugiat reprehenderit nostrum quos...</span>\n                                <MDBBtn color=\"secondary\" onClick={this.toggle(10)}>Close</MDBBtn>\n                                </MDBModalBody>\n                              </MDBModal>\n                          </div>\n                      </MDBCol>\n                      <MDBCol md=\"3\" className=\"mb-3\">\n                          <h5 className=\"text-center mb-3\">Fluid modal</h5>\n                          <img className=\"img-fluid z-depth-1\" src=\"https://mdbootstrap.com/img/brandflow/modal1.jpg\" alt=\"frame position\"/>\n                          <div className=\"text-center\">\n                              <h5 className=\"my-3\">Position</h5>\n                              <MDBBtn color=\"primary\" size=\"sm\" onClick={this.toggle(11)}>Right</MDBBtn>\n                              <MDBBtn color=\"primary\" size=\"sm\" onClick={this.toggle(12)}>Left</MDBBtn>\n                              <MDBBtn color=\"primary\" size=\"sm\" onClick={this.toggle(13)}>Top</MDBBtn>\n                              <MDBBtn color=\"primary\" size=\"sm\" onClick={this.toggle(14)}>Bottom</MDBBtn>\n                              <MDBModal toggle={this.toggle(11)} isOpen={this.state.modal11} fullHeight position=\"right\">\n                                <MDBModalHeader>Modal Title</MDBModalHeader>\n                                <MDBModalBody className=\"text-center\">\n                                <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Impedit nisi quo provident fugiat reprehenderit nostrum quos...</span>\n                                <MDBBtn color=\"secondary\" onClick={this.toggle(11)}>Close</MDBBtn>\n                                </MDBModalBody>\n                              </MDBModal>\n                              <MDBModal toggle={this.toggle(12)} isOpen={this.state.modal12} fullHeight position=\"left\">\n                                <MDBModalHeader>Modal Title</MDBModalHeader>\n                                <MDBModalBody className=\"text-center\">\n                                <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Impedit nisi quo provident fugiat reprehenderit nostrum quos...</span>\n                                <MDBBtn color=\"secondary\" onClick={this.toggle(12)}>Close</MDBBtn>\n                                </MDBModalBody>\n                              </MDBModal>\n                              <MDBModal toggle={this.toggle(13)} isOpen={this.state.modal13} fullHeight position=\"top\">\n                                <MDBModalHeader>Modal    Title</MDBModalHeader>\n                                <MDBModalBody className=\"text-center\">\n                                <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Impedit nisi quo provident fugiat reprehenderit nostrum quos...</span>\n                                <MDBBtn color=\"secondary\" onClick={this.toggle(13)}>Close</MDBBtn>\n                                </MDBModalBody>\n                              </MDBModal>\n                              <MDBModal toggle={this.toggle(14)} isOpen={this.state.modal14} fullHeight position=\"bottom\">\n                                <MDBModalHeader>Modal Title</MDBModalHeader>\n                                <MDBModalBody className=\"text-center\">\n                                <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Impedit nisi quo provident fugiat reprehenderit nostrum quos...</span>\n                                <MDBBtn color=\"secondary\" onClick={this.toggle(14)}>Close</MDBBtn>\n                                </MDBModalBody>\n                              </MDBModal>\n                          </div>\n                      </MDBCol>\n                  </MDBRow>\n                  </MDBCardBody>\n                </MDBCard>\n              </MDBCol>\n        )\n    }\n}\n\nexport default ModalSection;","import React from 'react';\nimport { MDBCard, MDBCardBody, MDBIcon, MDBRow, MDBCol } from 'mdbreact';\nimport FirebaseSingleValue from '../../custom/FirebaseSingleValue';\nimport ListBox from \"./../../custom/ListBox\";\n\nimport \"./CustomAddedCss.css\"\nimport { AST_DWLoop } from 'terser';\n\n  var divStyle1 = {\n    paddingTop: 0,\n    paddingBottom: 0,\n    paddingLeft: 3,\n    paddingRight: 3,\n    marginTop: 2,\n    lineHeight: 2.1,\n  };\n\nvar divStyle2 = {\n  paddingTop: 0,\n  paddingBottom: 0,\n  paddingLeft: 3,\n  paddingRight: 3,\n  marginTop: 2,\n  lineHeight: 2.1,\n};\n\nvar divStyle3 = {\n  paddingTop: 0,\n  paddingBottom: 0,\n  paddingLeft: 3,\n  paddingRight: 3,\n  lineHeight: 2.1,\n};\n\nvar divStyle4 = {\n  paddingBottom: 1,\n  marginBottom: 1,\n};\n\nconst AdminCardSection2Usage = () => {\n  return (\n    <MDBRow  style={divStyle4}>\n        <MDBCol md=\"7\" style={divStyle4}>\n          <div className=\"card1\">\n            <div>\n              <div style={divStyle1}>\n              <ListBox>\n                <div><span>Cost Savings for Today:</span></div>\n                <div >\n                  <span>On-Peak: </span>\n                  <span><FirebaseSingleValue field=\"predictedOnPeak\"></FirebaseSingleValue></span>\n                  <span> ¢</span></div>\n                <div>\n                  <span>Mid-Peak: </span>\n                  <span><FirebaseSingleValue field=\"predictedMidPeak\"></FirebaseSingleValue></span>\n                  <span> ¢</span></div>\n              </ListBox>\n              </div>\n            </div>\n          </div>\n          </MDBCol>\n        <MDBCol md=\"5\" style={divStyle1}>\n                    <div className=\"card1\">                        \n                        <MDBCard>\n                            <ListBox>\n                                <div><span>Lifetime Power Delivered by Battery:</span></div>\n                                <div >\n                                <span>On-Peak: </span>\n                                <span><FirebaseSingleValue field=\"predictedOnPeak\"></FirebaseSingleValue></span>\n                                <span> kWh</span></div>\n                                <div>\n                                <span>Mid-Peak: </span>\n                                <span><FirebaseSingleValue field=\"predictedMidPeak\"></FirebaseSingleValue></span>\n                                <span> kWh</span></div>\n                            </ListBox>\n                        </MDBCard>\n                    </div>\n         </MDBCol>\n      </MDBRow>\n  )\n}\n\nexport default AdminCardSection2Usage;\n\n","import React, { Component } from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport ReactDOM from \"react-dom\";\r\nimport firebase from 'firebase';\r\n\r\nclass MyPlotUsage extends Component {\r\n    constructor (props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            collection: this.props.collection || \"realtime_data\",\r\n            doc: this.props.doc || \"singleValues\",\r\n            plotWidth: '11',\r\n            trace1: {\r\n                x: ['Without DX06', 'With Dx06',],\r\n                y: [0, 0],\r\n                name: 'Off Peak',\r\n                type: 'bar',\r\n                marker: {\r\n                    color: '#91cf51'\r\n                  },\r\n              },\r\n            trace2: {\r\n                x: ['Without DX06', 'With Dx06',],\r\n                y: [0, 0],\r\n                name: 'Mid Peak',\r\n                type: 'bar',\r\n                marker: {\r\n                    color: '#ffbf00'\r\n                  },\r\n              },\r\n            trace3: {\r\n                x: ['Without DX06', 'With Dx06',],\r\n                y: [0, 0],\r\n                name: 'On Peak',\r\n                type: 'bar',\r\n                marker: {\r\n                    color: '#bf0000'\r\n                  },\r\n              },\r\n              \r\n         }\r\n\r\n         this.gotNewPlotData = this.gotNewPlotData.bind(this);\r\n         this.AddToInitialData = this.AddToInitialData.bind(this);\r\n    }\r\n    \r\n    AddToInitialData(x, y){\r\n        var newX = this.state.plotDataX.slice();\r\n        var newY = this.state.plotDataY.slice();\r\n\r\n        newX.push(x);\r\n        newY.push(y);\r\n\r\n        this.setState(() => ({\r\n            plotDataX: newX,\r\n            plotDataY: newY\r\n        }));\r\n    }\r\n\r\n    AddEntry(){\r\n        const db = firebase.firestore();\r\n\r\n        db.collection(this.state.collection).add({\r\n            timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\r\n            actual: Math.floor(Math.random()*10)\r\n        })\r\n        .then(function(docRef) {\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n        })\r\n        .catch(function(error) {\r\n            console.error(\"Error adding document: \", error);\r\n        });\r\n    }\r\n\r\n    gotNewPlotData(docData){\r\n        var newY1 = [\r\n            docData['uCostOffWD'],\r\n            docData['uCostOffD'],\r\n        ];\r\n\r\n        var newY2 = [\r\n            docData['uCostMidWD'],\r\n            docData['uCostMidD'],\r\n        ];\r\n        \r\n        var newY3 = [\r\n            docData['uCostOnWD'],\r\n            docData['uCostOnD'],\r\n        ];\r\n\r\n        this.setState((prevState, props) => ({\r\n            trace1:  {\r\n                x: prevState.trace1.x,\r\n                y: newY1,\r\n                type: prevState.trace1.type,\r\n                name: 'Off Peak',\r\n                marker: {\r\n                    color: '#91cf51',\r\n                  },\r\n                width: 0.5,\r\n            },\r\n            trace2: {\r\n                x: prevState.trace2.x,\r\n                y: newY2,\r\n                type: prevState.trace2.type,\r\n                name: 'Mid Peak',\r\n                marker: {\r\n                    color: '#ffbf00',\r\n                  },\r\n                width: 0.5,\r\n            },\r\n            trace3: {\r\n                x: prevState.trace3.x,\r\n                y: newY3,\r\n                type: prevState.trace3.type,\r\n                name: 'On Peak',\r\n                marker: {\r\n                    color: '#bf0000',\r\n                  },\r\n                width: 0.5,\r\n            }\r\n        }));\r\n    }\r\n\r\n    componentDidMount(){\r\n        const db = firebase.firestore();\r\n        const gotNewPlotData = this.gotNewPlotData;\r\n\r\n        db.collection(this.state.collection).doc(this.state.doc).get().then(document =>{\r\n            gotNewPlotData(document.data());\r\n        });\r\n\r\n        db.collection('realtime_data').onSnapshot(snapshot =>{\r\n            let changes = snapshot.docChanges();\r\n            \r\n            changes.forEach(change => {\r\n                if(change.type != 'modified') return;\r\n                gotNewPlotData(change.doc.data());\r\n            });\r\n        });\r\n\r\n        this.setState(() => ({\r\n            plotWidth: ReactDOM.findDOMNode(this).offsetWidth - 235,\r\n        }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Plot\r\n                    data={[this.state.trace1, this.state.trace2, this.state.trace3]}\r\n                    layout={ \r\n                        {\r\n                        barmode: 'stack',\r\n                        width:450,\r\n                        height:323,\r\n                        title: 'Lifetime Cost Savings',\r\n                        titlefont: {\r\n                            family: 'Roboto, sans-serif',\r\n                            size: 14,\r\n                            color: 'BCBCBC'\r\n                        },\r\n                        showlegend: true,\r\n                            legend: {\r\n                            x: 0.75,\r\n                            y: 1,\r\n                            font: {\r\n                              family: 'Roboto, sans-serif',\r\n                              size: 9,\r\n                              color: '#BCBCBC'\r\n                            },\r\n                            bgcolor: 'rgba(0,0,0,0)',\r\n                            bordercolor: 'rgba(0,0,0,0)',\r\n                            borderwidth: 0\r\n                            },\r\n                        plot_bgcolor: '#141414',\r\n                        paper_bgcolor: '#141414',\r\n                        autosize: false,\r\n                        margin: {\r\n                            l: 48,\r\n                            r: 20,\r\n                            b: 24,\r\n                            t: 30,\r\n                            pad: 4\r\n                            },\r\n\r\n                            xaxis: {\r\n                                tickfont: {\r\n                                    family: 'Roboto, sans-serif',\r\n                                    size: 8.5,\r\n                                    color: 'BCBCBC'\r\n                                },\r\n                                \r\n                               /*  showgrid: true,\r\n                                zeroline: true,\r\n                                showline: true,\r\n                                mirror: 'ticks',\r\n                                gridcolor: '#242424',\r\n                                gridwidth: 1,\r\n                                zerolinecolor: '#242424',\r\n                                zerolinewidth: 1,\r\n                                linecolor: '#242424',\r\n                                linewidth: 1,\r\n                                showticklabels: false, */\r\n                              },\r\n                              yaxis: {\r\n                                title: 'Total Cost ($)',\r\n                                titlefont: {\r\n                                    family: 'Roboto, sans-serif',\r\n                                    size: 12,\r\n                                    color: 'BCBCBC'\r\n                                },\r\n                                tickfont: {\r\n                                    family: 'Roboto, sans-serif',\r\n                                    size: 11,\r\n                                    color: 'BCBCBC'\r\n                                },\r\n                                showgrid: true,\r\n                                zeroline: true,\r\n                                showline: true,\r\n                                mirror: 'ticks',\r\n                                gridcolor: '#242424',\r\n                                gridwidth: 1,\r\n                                zerolinecolor: '#242424',\r\n                                zerolinewidth: 1,\r\n                                linecolor: '#242424',\r\n                                linewidth: 1\r\n                              }\r\n                        } }\r\n                    config={ {displayModeBar: false, responsive:true} }\r\n                />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPlotUsage;","import React, { Component } from 'react';\r\nimport Plot from 'react-plotly.js';\r\nimport ReactDOM from \"react-dom\";\r\nimport firebase from 'firebase';\r\n\r\nclass MyPlotUsage extends Component {\r\n    constructor (props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            collection: this.props.collection || \"realtime_data\",\r\n            doc: this.props.doc || \"singleValues\",\r\n            plotWidth: '200',\r\n            trace1: {\r\n                values: [19, 26, 55],\r\n                labels: ['On Peak', 'Mid Peak', 'Off Peak'],\r\n                type: 'pie',\r\n                marker: {\r\n                    colors: [\r\n                        '#bf0000',\r\n                        '#ffbf00',\r\n                        '#91cf51',\r\n                    ]\r\n                  },\r\n         }\r\n        }\r\n         this.gotNewPlotData = this.gotNewPlotData.bind(this);\r\n         this.AddToInitialData = this.AddToInitialData.bind(this);\r\n    }\r\n    \r\n    AddToInitialData(x, y){\r\n        var newX = this.state.plotDataX.slice();\r\n        var newY = this.state.plotDataY.slice();\r\n\r\n        newX.push(x);\r\n        newY.push(y);\r\n\r\n        this.setState(() => ({\r\n            plotDataX: newX,\r\n            plotDataY: newY\r\n        }));\r\n    }\r\n\r\n    AddEntry(){\r\n        const db = firebase.firestore();\r\n\r\n        db.collection(this.state.collection).add({\r\n            timestamp: firebase.firestore.Timestamp.fromDate(new Date()),\r\n            actual: Math.floor(Math.random()*10)\r\n        })\r\n        .then(function(docRef) {\r\n            console.log(\"Document written with ID: \", docRef.id);\r\n        })\r\n        .catch(function(error) {\r\n            console.error(\"Error adding document: \", error);\r\n        });\r\n    }\r\n\r\n    gotNewPlotData(docData){\r\n        var newY1 = [\r\n            docData['uPieOn'],\r\n            docData['uPieMid'],\r\n            docData['uPieOff'],\r\n        ];\r\n\r\n\r\n        this.setState((prevState, props) => ({\r\n            trace1:  {\r\n                x: prevState.trace1.x,\r\n                y: newY1,\r\n                type: prevState.trace1.type,\r\n                name: 'Off Peak',\r\n            },\r\n        }));\r\n    }\r\n\r\n    componentDidMount(){\r\n        const db = firebase.firestore();\r\n        const gotNewPlotData = this.gotNewPlotData;\r\n\r\n        db.collection(this.state.collection).doc(this.state.doc).get().then(document =>{\r\n            gotNewPlotData(document.data());\r\n        });\r\n\r\n        db.collection('realtime_data').onSnapshot(snapshot =>{\r\n            let changes = snapshot.docChanges();\r\n            \r\n            changes.forEach(change => {\r\n                if(change.type != 'modified') return;\r\n                gotNewPlotData(change.doc.data());\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Plot\r\n                    data={[this.state.trace1]}\r\n                    layout={ \r\n                        {\r\n                        width:250,\r\n                        height:200,\r\n                        title: 'Lifetime Usage',\r\n                        titlefont: {\r\n                            family: 'Roboto, sans-serif',\r\n                            size: 14,\r\n                            color: 'BCBCBC'\r\n                        },\r\n                        showlegend: false,\r\n                            legend: {\r\n                            x: 0.75,\r\n                            y: 1,\r\n                            font: {\r\n                              family: 'Roboto, sans-serif',\r\n                              size: 9,\r\n                              color: '#BCBCBC'\r\n                            },\r\n                            bgcolor: 'rgba(0,0,0,0)',\r\n                            bordercolor: 'rgba(0,0,0,0)',\r\n                            borderwidth: 0\r\n                            },\r\n                        plot_bgcolor: '#141414',\r\n                        paper_bgcolor: '#141414',\r\n                        autosize: false,\r\n                        margin: {\r\n                            l: 20,\r\n                            r: 20,\r\n                            b: 24,\r\n                            t: 30,\r\n                            pad: 4\r\n                            },\r\n\r\n                            xaxis: {\r\n                                tickfont: {\r\n                                    family: 'Roboto, sans-serif',\r\n                                    size: 8.5,\r\n                                    color: 'BCBCBC'\r\n                                },\r\n                                \r\n                              },\r\n                              yaxis: {\r\n                                title: 'Total Cost ($)',\r\n                                titlefont: {\r\n                                    family: 'Roboto, sans-serif',\r\n                                    size: 12,\r\n                                    color: 'BCBCBC'\r\n                                },\r\n                                tickfont: {\r\n                                    family: 'Roboto, sans-serif',\r\n                                    size: 11,\r\n                                    color: 'BCBCBC'\r\n                                },\r\n                                showgrid: true,\r\n                                zeroline: true,\r\n                                showline: true,\r\n                                mirror: 'ticks',\r\n                                gridcolor: '#242424',\r\n                                gridwidth: 1,\r\n                                zerolinecolor: '#242424',\r\n                                zerolinewidth: 1,\r\n                                linecolor: '#242424',\r\n                                linewidth: 1\r\n                              }\r\n                        } }\r\n                    config={ {displayModeBar: false, responsive:true} }\r\n                />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyPlotUsage;","import React, { Component } from 'react';\nimport { MDBCol, MDBCard, MDBCardBody, MDBCardHeader, MDBRow, MDBListGroup, MDBListGroupItem, MDBBadge, MDBIcon } from 'mdbreact';\nimport { Bar, Pie } from 'react-chartjs-2';\nimport Diagram from '../../custom/Diagram';\nimport MyPlot from '../../custom/MyPlot';\nimport PowerFlow from '../../custom/PowerFlow';\nimport MyPlotCost from '../../custom/MyPlotCost';\nimport MyPlotUsage from '../../custom/MyPlotUsage';\nimport FirebaseSingleValue from '../../custom/FirebaseSingleValue';\nimport ListBox from \"./../../custom/ListBox\";\nimport \"./CustomAddedCss.css\"\n\nvar divStyleGraph = {\n    background: \"#141414\",\n    textAlign: 'center' ,\n}\n\nvar divStyleContainer1 = {\n    paddingTop: 0,\n    paddingBottom: 0,\n    paddingLeft: 5,\n    paddingRight: 3,\n    marginBottom: 4,\n}\nvar divStyleContainer2 = {\n    paddingTop: 0,\n    paddingBottom: 0,\n    paddingLeft: 3,\n    paddingRight: 5,\n    margin: 0,\n}\n\n\nclass ChartSection1 extends Component {\n\n    render(){\n        return (\n            <MDBRow /* className=\"mb-2\" */>\n\n                <MDBCol md=\"7\" /* className=\"mb-2\" */ style={divStyleContainer2}>\n                    <MDBCard className=\"mb-1\" >\n                        <div style={divStyleGraph}>\n                                <MyPlotCost/>\n                        </div>\n                    </MDBCard>\n                </MDBCol>\n                <MDBCol md=\"5\"/* className=\"mb-2\" */ style={divStyleContainer1}>\n                    <div className=\"card1\">                        \n                        <MDBCard>\n                            <ListBox>\n                                <div><span>Lifetime Power Usage:</span></div>\n                                <div >\n                                <span>On-Peak: </span>\n                                <span><FirebaseSingleValue field=\"predictedOnPeak\"></FirebaseSingleValue></span>\n                                <span> kWh</span></div>\n                                <div>\n                                <span>Mid-Peak: </span>\n                                <span><FirebaseSingleValue field=\"predictedMidPeak\"></FirebaseSingleValue></span>\n                                <span> kWh</span></div>\n                                <div>\n                                <span>Off-Peak: </span>\n                                <span><FirebaseSingleValue field=\"predictedMidPeak\"></FirebaseSingleValue></span>\n                                <span> kWh</span></div>\n                            </ListBox>\n                        </MDBCard>\n                    </div>\n                    <MDBCard className=\"mb-1\">                        \n                        <div style={divStyleGraph}>\n                                <MyPlotUsage/>\n                        </div>\n                    </MDBCard>\n                </MDBCol> \n            </MDBRow>\n        )\n    }\n}\n\nexport default ChartSection1;\n\n","import React from 'react';\nimport { MDBRow } from 'mdbreact';\nimport AdminCardSection1 from './sections/AdminCardSection1';\nimport AdminCardSection2Usage from './sections/AdminCardSection2Usage';\nimport TableSection from './sections/TableSection';\nimport BreadcrumSection from './sections/BreadcrumSection';\nimport ChartSection1Usage from './sections/ChartSection1Usage';\nimport ChartSection2 from './sections/ChartSection2';\nimport MapSection from './sections/MapSection';\nimport ModalSection from './sections/ModalSection';\n\nconst UsagePage =  () => {\n  return (\n    <React.Fragment>\n      {/* <BreadcrumSection /> */}\n      <ChartSection1Usage />\n      {/* <AdminCardSection2 /> */}\n      {/* <TableSection /> */}\n      {/* <ChartSection2 /> */}\n      {/* <MDBRow className=\"mb-4\">\n          <MapSection />\n          <ModalSection />\n      </MDBRow> */}\n      <AdminCardSection2Usage /> \n    </React.Fragment>\n  )\n}\n\nexport default UsagePage;","import React from 'react';\nimport { MDBRow } from 'mdbreact';\nimport AdminCardSection1 from './sections/AdminCardSection1';\nimport AdminCardSection2 from './sections/AdminCardSection2';\nimport TableSection from './sections/TableSection';\nimport BreadcrumSection from './sections/BreadcrumSection';\nimport ChartSection1 from './sections/ChartSection1';\nimport ChartSection2 from './sections/ChartSection2';\nimport MapSection from './sections/MapSection';\nimport ModalSection from './sections/ModalSection';\n\nconst DashboardPage =  () => {\n  return (\n    <React.Fragment>\n      {/* <BreadcrumSection /> */}\n      {/* <ChartSection1 />\n      <AdminCardSection2 /> */}\n      {/* <TableSection /> */}\n      {/* <ChartSection2 /> */}\n      {/* <MDBRow className=\"mb-4\">\n          <MapSection />\n          <ModalSection />\n      </MDBRow> */}\n      {/* <AdminCardSection2 /> */}\n    </React.Fragment>\n  )\n}\n\nexport default DashboardPage;","import React from 'react';\nimport { MDBRow } from 'mdbreact';\nimport AdminCardSection1 from './sections/AdminCardSection1';\nimport AdminCardSection2 from './sections/AdminCardSection2';\nimport TableSection from './sections/TableSection';\nimport BreadcrumSection from './sections/BreadcrumSection';\nimport ChartSection1 from './sections/ChartSection1';\nimport ChartSection2 from './sections/ChartSection2';\nimport MapSection from './sections/MapSection';\nimport ModalSection from './sections/ModalSection';\n\nconst DashboardPage =  () => {\n  return (\n    <React.Fragment>\n      {/* <BreadcrumSection /> */}\n {/*      <ChartSection1 />\n      <AdminCardSection2 /> */}\n      {/* <TableSection /> */}\n      {/* <ChartSection2 /> */}\n      {/* <MDBRow className=\"mb-4\">\n          <MapSection />\n          <ModalSection />\n      </MDBRow> */}\n      {/* <AdminCardSection2 /> */}\n    </React.Fragment>\n  )\n}\n\nexport default DashboardPage;","import React from 'react'\nimport { MDBCol, MDBRow } from 'mdbreact';\nimport logo from \"../../assets/mdb-react.png\";\n\n\nconst NotFoundPage =  () => {\n  return (\n    <React.Fragment>\n      <div className=\"full\">\n        <MDBRow className=\"bad-gateway-row\">\n          <MDBCol md=\"8\">\n            <img alt=\"Error 404\" className=\"img-fluid\" hieght=\"20px\" src={logo}/>\n            <h2 className=\"h2-responsive mt-3 mb-2\">404. That's an error.</h2>\n            <h4>The requested URL was not found on this server.</h4>\n          </MDBCol>\n          <MDBCol md=\"4\">\n            <img alt=\"Error 404\" className=\"img-fluid\" src=\"https://mdbootstrap.com/img/Others/grafika404-bf.png\"/>\n          </MDBCol>\n        </MDBRow>\n      </div>\n    </React.Fragment>\n  )\n}\n\nexport default NotFoundPage;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport DashboardPage from './pages/DashboardPage';\nimport UsagePage from './pages/UsagePage';\nimport AboutPage from './pages/AboutPage';\nimport UtilityPage from './pages/UtilityPage';\nimport NotFoundPage from './pages/NotFoundPage';\n\nclass Routes extends React.Component {\n  render() {\n    return (\n      <Switch>\n        <Route path='/' exact component={DashboardPage} />\n        <Route path='/dashboard' component={DashboardPage} />\n        <Route path='/usage' component={UsagePage} />\n        <Route path='/utility' component={UtilityPage} />\n        <Route path='/about' component={AboutPage} />\n        <Route path='/404' component={NotFoundPage} />\n      </Switch>\n    );\n  }\n}\n\nexport default Routes;\n","import React from \"react\";\r\n\r\nconst SVG = ({\r\n  style = {},\r\n  fill = \"#000\",\r\n  width = \"23\",\r\n  height = \"28\",\r\n  className = \"\",\r\n  viewBox = \"0 0 40 40\"\r\n}) => (\r\n  <svg\r\n    width={width}\r\n    style={style}\r\n    height={height}\r\n    viewBox={viewBox}\r\n    fill={fill}\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className={`svg-icon ${className || \"\"}`}\r\n    xmlnsXlink=\"http://www.w3.org/1999/xlink\"\r\n  >\r\n    <path d=\"M4.75 28.5H33.25V25.3333H4.75V28.5ZM4.75 20.5833H33.25V17.4167H4.75V20.5833ZM4.75 9.5V12.6667H33.25V9.5H4.75Z\" fill=\"#454545\"/>\r\n  </svg>\r\n);\r\n\r\nexport default SVG;\r\n","import React, { Component, Fragment } from 'react';\nimport Burger  from '../assets/burger';\n\nvar divStyle = {\n    color: '#BCBCBC',\n    background: '#060606',\n    textAlign: 'center',\n    fontSize: 17,\n    fontStyle: 'normal',\n    fontWeight: 300,\n    lineHeight: 'normal',\n  };\n\n  var burgerStyle = {\n    color: 'white',\n    float:'left',\n    cursor: 'pointer'\n}\n\nclass TopNavigation extends Component {\n    state = {\n        collapse: false,\n        someText: 'sometextisthis'\n    }\n\n/*     onClick = () => {\n        console.log(\"JARRO\");\n        this.setState({\n            someText: \"JARRO\",\n        });\n    }\n\n    toggle = () => {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    } */\n\n    \n    render() {\n        return (\n            <Fragment>\n                <div onClick={()=>{this.props.sideOpen(true)} } style={{\n                          zIndex: 9,\n                          position: 'absolute',\n                          top:-3.15,\n                          cursor: 'pointer',\n                          color:'white'\n                        }}>\n                            <Burger></Burger>\n                        </div>\n                <div style={divStyle}>\n                    <span>Dashboard</span>\n                </div>\n            </Fragment>\n        );\n\n        // return (            \n        //     <MDBNavbar className=\"flexible-navbar\" light expand=\"md\" scrolling>\n        //         <MDBNavbarBrand href=\"/\">\n        //             <strong>Dashboard</strong>\n        //         </MDBNavbarBrand>\n        //         <MDBNavbarToggler onClick = { this.onClick } />\n        //         <MDBCollapse isOpen = { this.state.collapse } navbar>\n        //         </MDBCollapse>\n        //     </MDBNavbar>\n        // );\n    }\n}\n\nexport default TopNavigation;","import React, { Component } from 'react';\nimport Routes from '../src/components/Routes';\nimport TopNavigation from './components/topNavigation';\nimport './index.css';\nimport FirebaseSingleValue from './components/custom/FirebaseSingleValue';\nimport firebase from 'firebase';\nimport Sidebar from \"react-sidebar\";\n// import sidebarcontent from './sidebar'\n\nvar divStyleMain = {\n  justifyContent: 'center',  \n  maxWidth: 800,\n  maxHeight: 480,\n  margin: '0 auto',\n}\n\nvar divStyle = {\n  background: \"#141414\",\n  paddingTop: 5,\n  paddingLeft: 10,\n  paddingRight: 10,\n  marginLeft: 5,\n  marginRight: 5,\n}\n\nvar sidebarStyle = {\n  background: '#0F0F0F', \n  zIndex: 10\n}\n\nconst config = {\n    apiKey: \"AIzaSyD6ELRVu77cgZ-vZAxZxV1CJI1b-VRyMDo\",\n    authDomain: \"edp2019-3ffda.firebaseapp.com\",\n    databaseURL: \"https://edp2019-3ffda.firebaseio.com\",\n    projectId: \"edp2019-3ffda\",\n    storageBucket: \"edp2019-3ffda.appspot.com\",\n    messagingSenderId: \"1008420479112\"\n};\nfirebase.initializeApp(config);\n\n//To quickly delete\n// const db = firebase.firestore();\n// db.collection(\"realtime_dssata\").doc(\"predictVsdssActual\").delete();\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sidebarOpen: false\n    };\n    this.onSetSidebarOpen = this.onSetSidebarOpen.bind(this);\n  }\n\n  onSetSidebarOpen(open) {\n    this.setState({ sidebarOpen: open });\n  }\n\n  render() {\n    return (\n        <div className=\"flexible-content\" style={divStyleMain}>\n          <TopNavigation sideOpen={this.onSetSidebarOpen} />\n          <main id=\"content\" style={divStyle}>\n          <Routes />\n          </main>\n          <Sidebar\n            sidebar={\n              <div className=\"btn-group\">\n                <ul className='sidebar-ul'>\n                  <li className='sidebar-li'><div><a href='/dashboard'>Dashboard</a></div></li>\n                  <li className='sidebar-li'><div><a href='/usage'>Usage and Savings</a></div></li>\n                  <li className='sidebar-li'><div><a href='/utility'>Utility Rates</a></div></li>\n                  <li className='sidebar-li'><div><a href='/about'>About</a></div></li>\n                </ul>\n              </div>\n              }\n            open={this.state.sidebarOpen}\n            onSetOpen={this.onSetSidebarOpen}\n            styles={{ sidebar: sidebarStyle }}>\n          </Sidebar>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}